Refactoring
===========

Remove WIN32 code
New Front End - with new project...
	Migrate config info to defaults
	Defaults
	Settings
Remove deprecates
	NSMovie -> QTMovie
Remove custom heaps ?
Comments - doxygen - tutorials - algorithmic breakdown...
Move from C to C++
	remove defines
	classify
	replace malloc/free with new/delete
Multithreading ? Jobifying - Grand Central ?
Move entirely to Obj-C ?
	Do a port to get performance implications ?
Change QuakeC to some sort of Obj-C or Applescript ?

Feature upgrades
================

Foreign language support
Auto-find data folders (ID1) - use spotlight API's
Fold in all Quake GPL versions - Q1, Q2 & Q3 ?
Improve graphics
	Smoother animation for baddies
	Motion blur
	Deferred shading
	Ray tracing ?
Audio - real-time reverb, water noise etc
Move from fixed function to shader based OGL
Full screen effects - underwater, being hit by weapons etc.
Smoother animation and entity movement
playback from iTunes - playlist etc.

Other Ideas
===========

Pedantic errors - need to move to C++ first
	Complains about #import directive
Separate log window

Questions
=========

Where are preferences stored ? - the plist file looks very empty
	The .cfg file
	Move all that stuff to NSUserDefaults ?

OpenGL Optimisations...
=======================

1) Use Vertex Buffer Objects - currently uses ???
2) Use Multithreaded Engine - CGLEnable( context, kCGLCEMPEngine ); - need to use VBOs first - only if bound by CPU
3) Remove client/server sync points ( glGet*, glFinish, glReadPixels, glFinish(CFLFlushDrawable instead) - shadow state instead)
4) Master the developer tools - OpenGL Profiler, OpenGL Driver monitor, OpenGL Shader builder, Shark, Xray
5) 64 bit
6) Adopt GLSL
7) use APPLE_flush_buffer_range
8) Use Frame Buffer Objects (FBO)
9) Use Pixel Buffer Pbjects (PBO)
10) Embrace the platform
